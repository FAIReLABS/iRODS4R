---
title: "Linking R to iRODS' new HTTP API ðŸ¥³"
subtitle: "Release 0.2.0 of rirods"
author: 
  - "Martin Schobben"
  - "Mariana Montes"
  - "Terrell Russell"
date: "03/07/2024"
date-format: long
categories: [news, R, FAIR, open science]
---

```{r setup, echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE)#, cache = TRUE)
.old_config_dir <- Sys.getenv("R_USER_CONFIG_DIR")
Sys.setenv("R_USER_CONFIG_DIR" = tempdir())
here::i_am("posts/rirods-0-2-0/index.qmd")
```

::: {.callout-note}
This article is about  release 0.2.0 of `rirods` (see the [documentation](http://rirods.irods4r.org)).
:::


Packages used in this blog post.

```{r echo=TRUE, message=FALSE}
library(here)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
```


```{r}
git_commits_fls <- list.files(here("posts", "rirods-0-2-0" ,"data"), pattern = "_commits", full.names = TRUE)
git_commits <- read_csv(git_commits_fls, show_col_types = FALSE, id = "path") |> 
  mutate(name = tools::file_path_sans_ext(basename(path))) |> 
  separate(name, c("GitHub Group", "type")) |> 
  count(type, `GitHub Group`, name = "number") |> 
  mutate(
    `file size (Mb)` = file.size(git_commits_fls) / 1e6,
    type = factor(type, levels = c("repos", "commits"))
  )

git_repos_fls <- list.files(here("posts", "rirods-0-2-0" ,"data"), pattern = "_repos", full.names = TRUE)
git_repos <- read_csv(git_repos_fls, show_col_types = FALSE, id = "path") |> 
  mutate(name = tools::file_path_sans_ext(basename(path))) |> 
  separate(name, c("GitHub Group", "type")) |> 
  count(type, `GitHub Group`, name = "number")  |> 
  mutate(
    `file size (Mb)` = file.size(git_repos_fls)  / 1e6,
    type = factor(type, levels = c("repos", "commits"))
  )

bind_rows(git_commits, git_repos) |> 
  ggplot(aes(y = number, x = `file size (Mb)`, color = `GitHub Group`)) +
  geom_point() +
  theme_light() +
  facet_grid(cols = vars(type),  scales = "free", axes = "all") +
  scale_x_log10(guide = guide_axis_logticks(long = 2, mid = 1, short = 0.5))+
  scale_y_log10(guide = guide_axis_logticks(long = 2, mid = 1, short = 0.5)) +
  theme(legend.position = "top")

```


```{r echo=FALSE, fig.width=12}
fls <- Map(
  function (x) here("posts", "rirods-0-2-0" ,"data", x),
  c("http-files.csv", "rest-files.csv")
) |>  
  as.character() 

commit_hist <- read_csv(fls, show_col_types = FALSE) |>
  mutate(
    `fun name` =
      if_else(grepl("iput", expression), "iput", "iget"),
    `file size (Mb)` = size / 1e6,
    `memory allocated (Mb)` =
      case_when(
        endsWith(mem_alloc, "GB") ~ parse_number(mem_alloc) * 1e3,
        endsWith(mem_alloc, "MB") ~ parse_number(mem_alloc),
        endsWith(mem_alloc, "KB") ~ parse_number(mem_alloc) / 1e3
      ),
    `median time (sec)` = 1 / `itr/sec`
  ) 

make_plot <- function(dat, x, type = "files") {
  ggplot(dat, aes(x = `file size (Mb)`, y = {{x}}, color = source)) +
    geom_point() +
    geom_line() +
    scale_x_log10(guide = guide_axis_logticks(long = 2, mid = 1, short = 0.5)) +
    labs(color = "Package version") + 
    theme(legend.position = "top", legend.box = "vertical") +
    guides(color = guide_legend(nrow = 3, byrow = TRUE)) +
    facet_grid(cols = vars(`fun name`)) +
    theme_light() +
    theme(legend.position = "top")
}

make_table <- function(dat, x, type = "files", cap = "**") {
  dat |>  
    arrange(source, `fun name`, `file size (Mb)`) |> 
    relocate(source, `fun name`, `file name`, .before = expression) |> 
    select(
      !c(result, memory, time, `gc/sec`,	n_itr,	n_gc, gc, 
         total_time, min, `itr/sec`, expression, mem_alloc, size, median), 
    ) |> 
    knitr::kable(digits = 2, align = "r", format = "html", caption = cap)
}
```


```{r}
make_plot(commit_hist, `median time (sec)`)
```

```{r}
make_plot(commit_hist, `memory allocated (Mb)`)
```

```{r}
make_table(commit_hist)
```

```{r echo=FALSE}
Sys.setenv("R_USER_CONFIG_DIR" = .old_config_dir)
```

